#!/usr/bin/env python3
from pymongo import MongoClient
import inquirer
from os import system
import tabview


class Database:
    """Database class for connecting to database"""
    def __init__(self, location: str = "localhost", port: int = 27017):
        """Make location and ip default"""
        self.location = location
        self.port = port

    def connect(self):
        """Setup client for mongodb"""
        self.client = MongoClient(self.location, self.port)


def get_dbs(database):
    """Return all database names"""
    return database.client.list_database_names()


def get_collections(database):
    """Return all collections in given database"""
    return database.list_collection_names()


def get_docs(database):
    """Return all documents in the collections passed in"""
    return database.find({})


def ask_question(items: list):
    """List items and ask for selection"""
    questions = [inquirer.List('size', choices=items)]
    answers = inquirer.prompt(questions)
    return answers['size']


if __name__ == "__main__":
    # Connect database
    database = Database()
    database.connect()

    # Clear screen and ask for database to be picked from list of databases
    system("clear")
    dbs = get_dbs(database)
    db = ask_question(dbs)
    system("clear")
    a = database.client[db]

    # Get collections and ask user to select one
    collections = get_collections(a)
    collection = ask_question(collections)
    system("clear")
    b = database.client[db][collection]

    docs = get_docs(b)
    labels = [key for key in docs[0].keys()]
    data = [labels]
    for doc in docs:
        values = [value for value in doc.values()]
        data.append(values)
    tabview.view(data)
